name: Deploy Frontend

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node (only if package.json exists)
        if: ${{ hashFiles('package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install deps (only if package.json exists)
        if: ${{ hashFiles('package.json') != '' }}
        run: npm ci || npm install

      - name: Build (no-op if there is no build script)
        if: ${{ hashFiles('package.json') != '' }}
        run: |
          if npm pkg get scripts.build | grep -qv 'undefined'; then
            npm run build
          else
            echo "No build script, skipping."
          fi

      - id: vars
        run: |
          if [ -d "dist" ]; then
            echo "publish_dir=dist" >> "$GITHUB_OUTPUT"
          else
            echo "publish_dir=." >> "$GITHUB_OUTPUT"
          fi

      - name: Prepare SSH
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          SSH_HOST:        ${{ secrets.DEPLOY_HOST }}
          SSH_PORT:        ${{ secrets.DEPLOY_PORT }}
        run: |
          set -e
          mkdir -p ~/.ssh
          printf '%s\n' "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p "${SSH_PORT:-22}" "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Rsync to server
        run: |
          rsync -az --delete \
            "${{ steps.vars.outputs.publish_dir }}/" \
            "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/var/www/html/"
